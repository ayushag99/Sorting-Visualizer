{"version":3,"sources":["Visulaizer/Component/Toolbar/Toolbar.module.css","Visulaizer/SortingVisualizer.module.css","assets/Play.svg","assets/Pause.svg","assets/LeftShift.svg","assets/RightShift.svg","Visulaizer/Component/Bars/Bars.module.css","Visulaizer/Component/Bars/ArrayBar/ArrayBar.module.css","Visulaizer/Component/Toolbar/Toolbar.js","Visulaizer/Component/Bars/ArrayBar/ArrayBar.js","Visulaizer/Component/Bars/Bars.js","Visulaizer/SortingVisualizer.js","Algorithms/SelectionSort.js","Algorithms/BubbleSort.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Toolbar","className","styles","Controler","arrayGenerate","onClick","props","arrayGeneration","Controls","LeftShift","this","leftShift","src","alt","Play","toggleAnimation","animationPlayingStatus","Pause","RightShift","rightShift","value","algorithm","onChange","updateAlgo","disabled","completedLength","ProgressBar","ProgressCount","type","min","max","totalLength","TotalLength","Component","ArrayBar","style","height","width","backgroundColor","mark","swap_mark","Bars","state","maxHeight","maxValue","window","innerHeight","maxwidth","innerWidth","array","length","Math","map","index","key","animation","marker","i","j","swap","Algorithms","selectSort","animations","min_ind","push","arr","temp","bubbleSort","SortingVisualizer","animation_speed","algo","componentDidMount","resetWithNewArray","e","setState","target","len","startRange","endRange","cb","generateRandomArray","Array","from","floor","random","animationInitializer","animationHandler","pauseAnimation","clearInterval","animation_id","continueAnimation","setInterval","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,SAAW,0BAA0B,YAAc,+B,sBCA/ID,EAAOC,QAAU,CAAC,kBAAoB,+C,gBCDtCD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,6B,+RC8DdC,E,uKApDH,IAAD,OACP,OACE,yBAAKC,UAAWC,IAAOF,SACrB,yBAAKC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOE,eACrB,4BAAQC,QAAS,kBAAM,EAAKC,MAAMC,gBAAgB,GAAI,EAAG,OAAzD,mBAKF,yBAAKN,UAAWC,IAAOM,UACrB,yBAAKP,UAAWC,IAAOO,WACrB,yBAAKJ,QAASK,KAAKJ,MAAMK,UAAWC,IAAKH,IAAWI,IAAI,MAE1D,yBAAKZ,UAAWC,IAAOY,MACrB,yBACET,QAASK,KAAKJ,MAAMS,gBACpBH,IAAKF,KAAKJ,MAAMU,uBAAyBC,IAAQH,IACjDD,IAAI,MAGR,yBAAKZ,UAAWC,IAAOgB,YACrB,yBAAKb,QAASK,KAAKJ,MAAMa,WAAYP,IAAKM,IAAYL,IAAI,OAI9D,6BACE,4BAAQO,MAAOV,KAAKJ,MAAMe,UAAWC,SAAUZ,KAAKJ,MAAMiB,WAAYC,SAAwC,IAA7Bd,KAAKJ,MAAMmB,iBAC1F,4BAAQL,MAAM,cAAd,kBACA,4BAAQA,MAAM,cAAd,kBAKN,yBAAKnB,UAAWC,IAAOwB,aACrB,0BAAMzB,UAAWC,IAAOyB,eACrBjB,KAAKJ,MAAMmB,iBAEd,2BACEG,KAAK,QACLC,IAAI,IACJC,IAAKpB,KAAKJ,MAAMyB,YAChBX,MAAOV,KAAKJ,MAAMmB,gBAClBH,SAAU,eAEZ,0BAAMrB,UAAWC,IAAO8B,aAActB,KAAKJ,MAAMyB,mB,GA9CrCE,a,yCCHPC,EAHA,SAAC5B,GAAD,OACX,yBAAKL,UAAWC,IAAOgC,SAAUC,MAAO,CAACC,OAAO9B,EAAM8B,OAASC,MAAO/B,EAAM+B,MAAQC,gBAAgBhC,EAAMiC,KAAMjC,EAAMkC,UAAU,OAAO,MAAU,cC6BtIC,E,4MA1BbC,MAAQ,CACNC,UAAW,EACXC,SAAU,G,uDAGF,IAAD,OACHD,EAAiC,GAArBE,OAAOC,YAAoB,IACvCC,EAAgC,GAApBF,OAAOG,WAAoBtC,KAAKJ,MAAM2C,MAAMC,OACxDN,EAAWO,KAAKrB,IAAL,MAAAqB,KAAI,YAAQzC,KAAKJ,MAAM2C,QAEtC,OACE,yBAAKhD,UAAWC,IAAOuC,MACpB/B,KAAKJ,MAAM2C,MAAMG,KAAI,SAAChC,EAAOiC,GAAR,OACpB,kBAAC,EAAD,CACEC,IAAKD,EACLhB,MAAOU,EACPX,OAAShB,EAAQwB,EAAYD,EAC7BJ,KAAO,EAAKjC,MAAMiD,UAAUC,OAAOC,IAAMJ,GAAS,EAAK/C,MAAMiD,UAAUC,OAAOE,IAAML,EACpFb,UAAa,EAAKlC,MAAMiD,UAAUI,e,GAnB3B1B,aCMb2B,EAAa,CACjBC,WCboB,SAACZ,GAGrB,IAFA,IAAIa,EAAa,GAERL,EAAI,EAAGA,EAAIR,EAAMC,OAAQO,IAAK,CAErC,IADA,IAAIM,EAAUN,EACLC,EAAID,EAAI,EAAGC,EAAIT,EAAMC,OAAQQ,IAChCT,EAAMc,GAAWd,EAAMS,IACzBK,EAAUL,EACVI,EAAWE,KAAK,CAAEP,IAAGC,IAAGC,MAAM,EAAMM,IAAI,YAAKhB,MAE7Ca,EAAWE,KAAK,CAAEP,IAAGC,IAAGC,MAAM,EAAOM,IAAI,YAAKhB,KAGlDa,EAAWE,KAAK,CAAEP,IAAGC,EAAGK,EAASJ,MAAM,EAAMM,IAAI,YAAKhB,KACtD,IAAIiB,EAAOjB,EAAMQ,GACjBR,EAAMQ,GAAKR,EAAMc,GACjBd,EAAMc,GAAWG,EACjBJ,EAAWE,KAAK,CAAEP,IAAGC,EAAGK,EAASJ,MAAM,EAAMM,IAAI,YAAKhB,KAExD,OAAOa,GDLPK,WEde,SAAClB,GAGd,IAFA,IAAIa,EAAa,GAETL,EAAE,EAAGA,EAAER,EAAMC,OAAOO,IACxB,IAAK,IAAIC,EAAG,EAAGA,EAAET,EAAMC,OAAOO,EAAE,EAAEC,IAG9B,GAFAI,EAAWE,KAAK,CAACP,EAAEC,EAAEA,EAAEA,EAAE,EAAEC,MAAK,EAAQM,IAAI,YAAIhB,KAE5CA,EAAMS,GAAGT,EAAMS,EAAE,GAAG,CACpBI,EAAWE,KAAK,CAACP,EAAEC,EAAEA,EAAEA,EAAE,EAAEC,MAAK,EAAOM,IAAI,YAAIhB,KAC/C,IAAIiB,EAAOjB,EAAMS,GACjBT,EAAMS,GAAKT,EAAMS,EAAE,GACnBT,EAAMS,EAAE,GAAKQ,EACbJ,EAAWE,KAAK,CAACP,EAAEC,EAAEA,EAAEA,EAAE,EAAEC,MAAK,EAAOM,IAAI,YAAIhB,KAQ3D,OAAOa,IFqJIM,E,4MAvJbC,gBAAkB,G,EAClBP,WAAa,G,EACbT,MAAQ,E,EACRX,MAAQ,CACNO,MAAO,GACPjC,wBAAwB,EACxBsD,KAAM,aACNf,UAAW,CACTC,OAAQ,CAAEC,EAAG,KAAMC,EAAG,MACtBC,KAAM,O,EAMVY,kBAAoB,WAElB,EAAKC,kBAAkB,GAAI,EAAG,K,EAIhCjD,WAAa,SAACkD,GACZ,EAAKX,WAAW,GAChB,EAAKT,MAAQ,EAEb,EAAKqB,SAAS,CACZJ,KAAKG,EAAEE,OAAOvD,S,EAOlBoD,kBAAoB,WAAkD,IAAjDI,EAAgD,uDAA1C,GAAIC,EAAsC,uDAAzB,EAAGC,EAAsB,uDAAX,GAAIC,EAAO,uCACnE,EAAK1B,MAAQ,EACb,EAAKS,WAAa,GAClB,EAAKY,SACH,CACEzB,MAAO,EAAK+B,oBAAoBJ,EAAKC,EAAYC,GACjD9D,wBAAwB,EACxBuC,UAAW,CACTC,OAAQ,CAAEC,EAAG,KAAMC,EAAG,MACtBC,KAAM,OAGVoB,I,EAKJC,oBAAsB,SAACJ,EAAKC,EAAYC,GAKtC,OAHYG,MAAMC,KAAK,CAAEhC,OAAQ0B,IAAO,kBACtCzB,KAAKgC,MAAMhC,KAAKiC,UAAYN,EAAWD,EAAa,GAAKA,O,EAO7DQ,qBAAuB,WAErB,EAAKvB,WAAaF,EAAW,EAAKlB,MAAM4B,MAAM,EAAK5B,MAAMO,OACzD,EAAKa,WAAWE,KAAK,CACnBP,EAAG,KACHC,EAAG,KACHC,KAAM,KACNM,IAAK,EAAKH,WAAW,EAAKA,WAAWZ,OAAS,GAAGe,MAEnD,EAAKZ,MAAQ,G,EAKfiC,iBAAmB,SAACxB,GAClB,GAAIA,EAAWZ,SAAW,EAAKG,MAG7B,OAFA,EAAKkC,sBACL,EAAKlC,OAAS,GAGhB,EAAKqB,SAAS,CACZzB,MAAOa,EAAW,EAAKT,OAAOY,IAC9BV,UAAW,CACTC,OAAQ,CAAEC,EAAGK,EAAW,EAAKT,OAAOI,EAAGC,EAAGI,EAAW,EAAKT,OAAOK,GACjEC,KAAMG,EAAW,EAAKT,OAAOM,S,EAKnC4B,eAAiB,WACf,EAAKb,SAAS,CAAE1D,wBAAwB,IACxCwE,cAAc,EAAKC,e,EAGrBC,kBAAoB,WACK,GAAnB,EAAK5B,YAEP,EAAKuB,uBAEP,EAAKX,SAAS,CAAE1D,wBAAwB,IACxC,EAAKyE,aAAeE,aAAY,WAC9B,EAAKL,iBAAiB,EAAKxB,YAC3B,EAAKT,OAAS,IACb,EAAKgB,kB,EAGVtD,gBAAkB,WACZ,EAAK2B,MAAM1B,uBACb,EAAKuE,iBAEL,EAAKG,qB,EAIT/E,UAAY,WACN,EAAK0C,MAAM,IACf,EAAKkC,iBACL,EAAKlC,OAAS,EACd,EAAKiC,iBAAiB,EAAKxB,c,EAG7B3C,WAAa,WACP,EAAKkC,MAAM,EAAKS,WAAWZ,SAC/B,EAAKqC,iBACL,EAAKD,iBAAiB,EAAKxB,YAC3B,EAAKT,OAAS,I,uDAMd,OACE,yBAAKpD,UAAWC,IAAOkE,mBACrB,kBAAC,EAAD,CAAMnB,MAAOvC,KAAKgC,MAAMO,MAAOM,UAAW7C,KAAKgC,MAAMa,YAErD,kBAAC,EAAD,CACEhD,gBAAiBG,KAAK8D,kBACtBxD,uBAAwBN,KAAKgC,MAAM1B,uBACnCD,gBAAiBL,KAAKK,gBACtBJ,UAAWD,KAAKC,UAChBQ,WAAYT,KAAKS,WACjBY,YAAarB,KAAKoD,WAAWZ,OAC7BzB,gBAAiBf,KAAK2C,MACtB9B,WAAYb,KAAKa,WACjBF,UAAWX,KAAKgC,MAAM4B,Y,GAjJArC,aGLjB2D,MARf,WACE,OACE,yBAAK3F,UAAU,OACf,kBAAC,EAAD,CAAmBA,UAAU,aCIb4F,QACW,cAA7BhD,OAAOiD,SAASC,UAEe,UAA7BlD,OAAOiD,SAASC,UAEhBlD,OAAOiD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ceff0daf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2XLBu\",\"Controler\":\"Toolbar_Controler__1Nz8i\",\"Controls\":\"Toolbar_Controls__1y8r6\",\"ProgressBar\":\"Toolbar_ProgressBar__1soxP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SortingVisualizer\":\"SortingVisualizer_SortingVisualizer__3urjX\"};","module.exports = __webpack_public_path__ + \"static/media/Play.d0c0a044.svg\";","module.exports = __webpack_public_path__ + \"static/media/Pause.69377113.svg\";","module.exports = __webpack_public_path__ + \"static/media/LeftShift.ed3cf220.svg\";","module.exports = __webpack_public_path__ + \"static/media/RightShift.0ddd6ca6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bars\":\"Bars_Bars__1yBpV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArrayBar\":\"ArrayBar_ArrayBar__uGhJl\"};","import React, { Component } from \"react\";\n\nimport styles from \"./Toolbar.module.css\";\n\n// Importing Button\nimport Play from \"../../../assets/Play.svg\";\nimport Pause from \"../../../assets/Pause.svg\";\nimport LeftShift from \"../../../assets/LeftShift.svg\";\nimport RightShift from \"../../../assets/RightShift.svg\";\n\nclass Toolbar extends Component {\n  render() {\n    return (\n      <div className={styles.Toolbar}>\n        <div className={styles.Controler}>\n          <div className={styles.arrayGenerate}>\n            <button onClick={() => this.props.arrayGeneration(50, 5, 1000)}>\n              Generate Array\n            </button>\n          </div>\n\n          <div className={styles.Controls}>\n            <div className={styles.LeftShift}>\n              <img onClick={this.props.leftShift} src={LeftShift} alt=\"\" />\n            </div>\n            <div className={styles.Play}>\n              <img\n                onClick={this.props.toggleAnimation}\n                src={this.props.animationPlayingStatus ? Pause : Play}\n                alt=\"\"\n              />\n            </div>\n            <div className={styles.RightShift}>\n              <img onClick={this.props.rightShift} src={RightShift} alt=\"\" />\n            </div>\n          </div>\n\n          <div>\n            <select value={this.props.algorithm} onChange={this.props.updateAlgo} disabled={(this.props.completedLength===0)?false : true}>\n              <option value=\"selectSort\">Selection Sort</option>\n              <option value=\"bubbleSort\">Bubble Sort</option>\n            </select>\n          </div>\n        </div>\n\n        <div className={styles.ProgressBar}>\n          <span className={styles.ProgressCount}>\n            {this.props.completedLength}\n          </span>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max={this.props.totalLength}\n            value={this.props.completedLength}\n            onChange={()=>{}}\n          />\n          <span className={styles.TotalLength}>{this.props.totalLength}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React from 'react'\n\nimport styles from './ArrayBar.module.css'\n\nconst ArrayBar=(props)=> (\n    <div className={styles.ArrayBar} style={{height:props.height , width: props.width , backgroundColor:props.mark? props.swap_mark?'Blue':'red'   : '#2e2e2e'}}></div>\n)\nexport default ArrayBar;","import React, { Component } from \"react\";\n\nimport styles from \"./Bars.module.css\";\n\n// Imorting Component\nimport ArrayBar from \"./ArrayBar/ArrayBar\";\n\nclass Bars extends Component {\n  state = {\n    maxHeight: 0,\n    maxValue: 0,\n  };\n\n  render() {\n    let maxHeight = window.innerHeight * 0.8 * 0.98;\n    let maxwidth = (window.innerWidth * 0.8) / this.props.array.length;\n    let maxValue = Math.max(...this.props.array);\n    // console.log(maxwidth)\n    return (\n      <div className={styles.Bars}>\n        {this.props.array.map((value, index) => (\n          <ArrayBar\n            key={index}\n            width={maxwidth}\n            height={(value / maxValue) * maxHeight}\n            mark= {this.props.animation.marker.i === index || this.props.animation.marker.j === index ? true : false}\n            swap_mark = {this.props.animation.swap}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Bars;\n","import React, { Component } from \"react\";\n\n// Importing Styles\nimport styles from \"./SortingVisualizer.module.css\";\n\n// Importing Components\nimport Toolbar from \"./Component/Toolbar/Toolbar\";\nimport Bars from \"./Component/Bars/Bars\";\n\n// Importing Algorithm Handler\nimport selectionSort from \"../Algorithms/SelectionSort\";\nimport bubbleSort from \"../Algorithms/BubbleSort\";\n\nconst Algorithms = {\n  selectSort: selectionSort,\n  bubbleSort: bubbleSort,\n};\n\nclass SortingVisualizer extends Component {\n  animation_speed = 10;\n  animations = [];\n  index = 0;\n  state = {\n    array: [],\n    animationPlayingStatus: false,\n    algo: \"selectSort\",\n    animation: {\n      marker: { i: null, j: null },\n      swap: null,\n    },\n  };\n\n  //   @desc\n  // HERE: Lifecycle Management\n  componentDidMount = () => {\n    // console.log(\"Mounted\");\n    this.resetWithNewArray(20, 5, 50);\n  };\n  //   @desc\n  // HERE: Algorithm Update\n  updateAlgo = (e) => {\n    this.animations=[]\n    this.index = 0\n\n    this.setState({\n      algo:e.target.value\n    })\n\n  };\n\n  //   @desc\n  //   HERE: Reset with new array\n  resetWithNewArray = (len = 20, startRange = 5, endRange = 50, cb) => {\n    this.index = 0;\n    this.animations = [];\n    this.setState(\n      {\n        array: this.generateRandomArray(len, startRange, endRange),\n        animationPlayingStatus: false,\n        animation: {\n          marker: { i: null, j: null },\n          swap: null,\n        },\n      },\n      cb\n    );\n  };\n  //   @desc\n  //   HERE: Generate Random Array\n  generateRandomArray = (len, startRange, endRange) => {\n    //   Generating random array\n    let array = Array.from({ length: len }, () =>\n      Math.floor(Math.random() * (endRange - startRange + 1) + startRange)\n    );\n    return array;\n  };\n\n  // @desc\n  // HERE: Initializes the animation\n  animationInitializer = () => {\n    //   TODO: Will need a correction--such that algorithm can be dynamically selected\n    this.animations = Algorithms[this.state.algo](this.state.array);\n    this.animations.push({\n      i: null,\n      j: null,\n      swap: null,\n      arr: this.animations[this.animations.length - 1].arr,\n    });\n    this.index = 0;\n  };\n\n  // @desc\n  // HERE: Animation Handler\n  animationHandler = (animations) => {\n    if (animations.length === this.index) {\n      this.pauseAnimation();\n      this.index -= 1;\n      return;\n    }\n    this.setState({\n      array: animations[this.index].arr,\n      animation: {\n        marker: { i: animations[this.index].i, j: animations[this.index].j },\n        swap: animations[this.index].swap,\n      },\n    });\n  };\n\n  pauseAnimation = () => {\n    this.setState({ animationPlayingStatus: false });\n    clearInterval(this.animation_id);\n  };\n\n  continueAnimation = () => {\n    if (this.animations == false) {\n      //   TODO: Needs an alteration that the by default algo is preset\n      this.animationInitializer();\n    }\n    this.setState({ animationPlayingStatus: true });\n    this.animation_id = setInterval(() => {\n      this.animationHandler(this.animations);\n      this.index += 1;\n    }, this.animation_speed);\n  };\n\n  toggleAnimation = () => {\n    if (this.state.animationPlayingStatus) {\n      this.pauseAnimation();\n    } else {\n      this.continueAnimation();\n    }\n  };\n\n  leftShift = () => {\n    if (this.index>0){\n    this.pauseAnimation();\n    this.index -= 1;\n    this.animationHandler(this.animations);\n  }\n  };\n  rightShift = () => {\n    if (this.index<this.animations.length){\n    this.pauseAnimation();\n    this.animationHandler(this.animations);\n    this.index += 1;}\n  };\n\n  // @desc\n  // HERE: Render Function\n  render() {\n    return (\n      <div className={styles.SortingVisualizer}>\n        <Bars array={this.state.array} animation={this.state.animation} />\n\n        <Toolbar\n          arrayGeneration={this.resetWithNewArray}\n          animationPlayingStatus={this.state.animationPlayingStatus}\n          toggleAnimation={this.toggleAnimation}\n          leftShift={this.leftShift}\n          rightShift={this.rightShift}\n          totalLength={this.animations.length}\n          completedLength={this.index}\n          updateAlgo={this.updateAlgo}\n          algorithm={this.state.algo}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SortingVisualizer;\n","// selection Sort\nconst selectionSort = (array) => {\n  let animations = [];\n  // Structure = {i:index_1 , j:index_2 . swap:true/false}\n  for (let i = 0; i < array.length; i++) {\n    let min_ind = i;\n    for (let j = i + 1; j < array.length; j++) {\n      if (array[min_ind] > array[j]) {\n        min_ind = j;\n        animations.push({ i, j, swap: true, arr: [...array] });\n      } else {\n        animations.push({ i, j, swap: false, arr: [...array] });\n      }\n    }\n    animations.push({ i, j: min_ind, swap: true, arr: [...array] });\n    let temp = array[i];\n    array[i] = array[min_ind];\n    array[min_ind] = temp;\n    animations.push({ i, j: min_ind, swap: true, arr: [...array] });\n  }\n  return animations;\n};\nexport default selectionSort;\n","// selection Sort\nconst bubbleSort=(array)=>{\n    let animations = []\n    // Structure = {i:index_1 , j:index_2 . swap:true/false}\n    for(let i=0; i<array.length;i++){\n        for (let j= 0; j<array.length-i-1;j++){\n            animations.push({i:j,j:j+1,swap:false , arr:[...array]})\n\n            if (array[j]>array[j+1]){\n                animations.push({i:j,j:j+1,swap:true , arr:[...array]})\n                let temp = array[j]\n                array[j] = array[j+1]\n                array[j+1] = temp\n                animations.push({i:j,j:j+1,swap:true , arr:[...array]})\n            }\n            \n            \n        }\n        \n        \n    }\n    return animations\n}\nexport default bubbleSort","import React from \"react\";\nimport \"./App.css\";\n\nimport SortingVisualizer from \"./Visulaizer/SortingVisualizer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <SortingVisualizer className=\"window\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}